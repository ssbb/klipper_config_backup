######################### PRINT START / END #########################

[gcode_macro PRINT_START]
# For setting the parameters as persistent variables so they can be referenced in PRINT_START2
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
gcode:
    # Parameters
    {% set bed = params.BED|int %}
    {% set hotend = params.HOTEND|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}

    # Set the parameters as persistent variables so they can be referenced outside of the macro (in PRINT_END)
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}   
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={hotend} 
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={chamber}   
    
    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0                                       ; cancel off timer (if there is one)
    #SET_PIN PIN=caselight VALUE=1                                                        ; turn on case light
    _RESETSPEEDS                                                                          ; reset speed, accel etc to configured values
    RESETRGB                                                                             ; reset LCD RGB
    SET_NOZZLE_LEDS_BY_NAME COLOR="WHITE"                                                ; turn on nozzle LEDs
    SET_LOGO_LEDS_BY_NAME COLOR="RED"                                                  ; set logo LEDs back to white
    M104 S140                                                                            ; set hotend to no-ooze temp
    M140 S{bed}                                                                          ; set bed to target temp
    G28                                                                                  ; home
    G90                                                                                  ; absolute positioning
    #{% if printer["temperature_sensor chamber"].temperature < chamber %}                 ; - if chamber is not at temp yet:
    #    HEATSOAK T={bed} MOVE=1                                                          ;   heatsoak macro + park in center
    #    M190 S{bed}                                                                      ;   wait for bed final temp
    #    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}           ;   wait for chamber final temp
    #{% else %}                                                                           ; - if chamber is already at temp:
    #    {% if printer.heater_bed.temperature < (bed-2) %}                                ; -- but bed is not fully heated (within 2C):
    #        HEATSOAK T={bed} MOVE=1                                                      ;       heatsoak and park
            M190 S{bed}                                                                  ;       wait for bed final temp
    #    {% else %}                                                                       ; -- and bed is already heated:
    #        HEATSOAK T={bed} MOVE=0                                                      ;       "heatsoak" without parking (only still calling this because it does some other things like turn off exahaust fan)
    #    {% endif %}
    #{% endif %} 
    SET_LOGO_LEDS_BY_NAME COLOR="RED"                                                  ; set logo LEDs back to white
    M106 S0                                                                              ; turn off part cooling fan (from heatsoak)
    BED_MESH_CLEAR                                                                       ; clear bed mesh
    #ATTACH_PROBE_LOCK                                                                    ; attach klicky + lock
    Z_TILT_ADJUST                                                                        ; quad gantry level
    G28 Z                                                                                ; home z
    G90                                                                                  ; absolute positioning
    G0 Z20                                                                               ; hop up to prevent knocking probe off after homing Z
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F19500  ; move to center of bed to prevent knocking probe off after homing Z (otherwise QGL just moves our Z hop down again before traveling)
    BED_MESH_CALIBRATE                                                                   ; mesh
    G28 Z                                                                                ; home z again
    G0 Z20                                                                               ; hop up to prevent knocking probe off after homing Z
    #DOCK_PROBE_UNLOCK                                                                    ; stow probe, unlock
    G0 X205 Z10 Y{printer.toolhead.axis_maximum.y} F19500                                ; move to right of nozzle brush
    M109 S{hotend}                                                                       ; set & wait for hotend final temp
    CLEANNOZZLE                                                                          ; clean nozzle while hot
    G28 Z
    #TEMPADJUSTPA                                                                         ; change PA based on bed temp
    #CALIBRATE_Z                                                                          ; calibrate z offset with hot nozzle
    SWIPENOZZLE                                                                          ; swipe nozzle brush on way to print purge line
    #SET_FAN_SPEED FAN=Exhaust SPEED=0.1                                                 ; set chamber fan to 10%
    G92 E0                                                                               ; reset Extruder
    #G1 X0 Y20 Z0.3 F19500.0                                                              ; move to start position
    #G1 X0 Y200.0 Z0.3 F1500.0 E15                                                        ; draw the first line
    #G92 E0                                                                               ; reset Extruder
    G1 Z2.0 F3000                                                                        ; move Z Axis up
    #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                                  ; enable filament sensor

[gcode_macro PRINT_END]
gcode:
    RESETRGB                                                                             ; revert LCD RGB
    #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
    CLEAR_PAUSE                                                                          ; clear pause (from M191) if there is one
    #{% if printer.heater_bed.temperature >= 100 %}                                       
    #    SET_FAN_SPEED FAN=Exhaust SPEED=1                                                ; crank exhaust fan to 100% to evacuate chamber
    #{% endif %}                                                 
    M400                                                                                 ; wait for buffer to clear
    G92 E0                                                                               ; zero the extruder
    M104 S0                                                                              ; turn only the hotend off
    M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}                               ; return the bed to temp, slicers like to turn it off
    M107                                                                                 ; turn off part cooling fan
    G91                                                                                  ; relative positioning
    G1 Z5 F3000                                                                          ; move nozzle up 5mm
    G90                                                                                  ; absolute positioning
    G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F19500.0    ; park nozzle at rear
    BED_MESH_CLEAR                                                                       ; clear bed mesh                                    
    #UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=120                                     ; turn exhaust off in 2 min
    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=3600                                     ; turn everything off in 1 hour
    _RESETSPEEDS                                                                          ; reset speed, accel etc to configured max values
    SET_NOZZLE_LEDS_BY_NAME COLOR="OFF"                                                  ; turn off nozzle LEDs
    BEEP I=3                                                                             ; beep 3 times
 
[delayed_gcode DELAYED_OFF]
gcode:
    OFF ; call "OFF" macro, to turn off everything (heaters, motors, lights, fans)

[gcode_macro CLEANNOZZLE]
gcode:
    # Parameters
    # Iterations
    {% set i = params.I|default(5)|int %}
    # Speed
    {% set s = params.S|default(100)|int %}
    
    _CG28
    SAVE_GCODE_STATE NAME=CLEANNOZZLE
    G90                                                   ; absolute positioning
    G0 X205 Z10 Y{printer.toolhead.axis_maximum.y} F19500 ; move to left of nozzle brush
    G0 Z4 F19500                                          ; move down to nozzle brush
    {% for iteration in range(i|int) %}
        G0 X250 F{s*60}                                    ; wipe back
        G0 X215 F{s*60}                                   ; wipe forth
    {% endfor %}
    G0 X215 F{s*60}                                       ; wipe back
    G0 Z10 F19500                                         ; raise
    RESTORE_GCODE_STATE NAME=CLEANNOZZLE

[gcode_macro _SWIPENOZZLE]
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=SWIPENOZZLE
    G90                                                   ; absolute positioning
    G0 X205 Z10 Y{printer.toolhead.axis_maximum.y} F19500 ; move to right of nozzle brush
    G0 Z4  F19500                                        ; lower
    G0 X250 F2400                                          ; wipe back
    G0 Z10  F19500                                        ; raise
    RESTORE_GCODE_STATE NAME=SWIPENOZZLE  

######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

######################### MISC #########################

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}


[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
        G4 P{dur}
    {% endfor %}


[gcode_macro _RESETSPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity}
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}

[gcode_macro TEST_MESH]
gcode:
  BED_MESH_CLEAR
  G28
  Z_TILT_ADJUST
  G28
  BED_MESH_CALIBRATE  

######################### LCD / RGB CONTROLS #########################

# Set SB RGB at startup
[delayed_gcode SETSBRGB]
initial_duration: 1
gcode:
    SET_LOGO_LEDS_BY_NAME COLOR="RED"

# Set LCD RGB at startup
[delayed_gcode SETDISPLAYNEOPIXEL]
initial_duration: 1
gcode:
    RESETRGB

# Default RGB
[gcode_macro RESETRGB]
gcode:
    SET_LED LED=lcd RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
    SET_LED LED=lcd RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=lcd RED=1 GREEN=0 BLUE=0 INDEX=3

# Example LCDRGB R=1 G=0.5 B=0
[gcode_macro LCDRGB]
gcode:
    {% set r = params.R|default(1)|float %}
    {% set g = params.G|default(1)|float %}
    {% set b = params.B|default(1)|float %}

    SET_LED LED=lcd RED={r} GREEN={g} BLUE={b} INDEX=1 TRANSMIT=0
    SET_LED LED=lcd RED={r} GREEN={g} BLUE={b} INDEX=2 TRANSMIT=0
    SET_LED LED=lcd RED={r} GREEN={g} BLUE={b} INDEX=3

######################### ALIASES/SHORTCUTS #########################

# Just a shortcut to turn EVERYTHING off with one command (beds, heaters, motors, lights)
[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=Exhaust SPEED=0    ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedOuter SPEED=0   ; bed fan off
    #SET_FAN_SPEED FAN=BedInner SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0        ; turn light off
    SET_NOZZLE_LEDS_BY_NAME COLOR="OFF"  ; turn nozzle LEDs off
    SET_LOGO_LEDS_BY_NAME COLOR="RED"  ; set logo LED back to white