######################### PRINT START / END #########################

[gcode_macro PRINT_START]
# For setting the parameters as persistent variables so they can be referenced in PRINT_START2
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
gcode:
  # Parameters
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.HOTEND|int %}
  {% set target_chamber = params.CHAMBER|default(0)|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Set the parameters as persistent variables so they can be referenced outside of the macro (in PRINT_END)
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={target_bed}   
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={target_extruder} 
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={target_chamber}   

  # Trigger bed temp at the start so it's not turned off.
  # M190 S{target_bed}

  _CG28

  ATTACH_PROBE_LOCK

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    # SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    # TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  # SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  # M109 S150                                    # Heats the nozzle to 150c

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  #SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  #STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  #quad_gantry_level               # Levels the buildplate via QGL
  #G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  bed_mesh_calibrate                 # Starts bed mesh

  DOCK_PROBE_UNLOCK

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # CLEAN_NOZZLE

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position


[gcode_macro PRINT_END]
gcode:
    M400                                                                                 ; wait for buffer to clear
    G92 E0                                                                               ; zero the extruder
    M104 S0
    M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}                               ; return the bed to temp, slicers like to turn it off
    M107

    G91                                                                                  ; relative positioning
    G1 Z5 F3000                                                                          ; move nozzle up 5mm
    G90                                                                                  ; absolute positioning
    G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F19500.0    ; park nozzle at rear

    # Disable steppers
    # M84

    BED_MESH_CLEAR
    STATUS_READY

    BEEP I=3                                                                             ; beep 3 times
                                                                                         ; beep 3 times
 
[gcode_macro CLEANNOZZLE]
gcode:
    # Parameters
    # Iterations
    {% set i = params.I|default(5)|int %}
    # Speed
    {% set s = params.S|default(100)|int %}
    
    _CG28
    SAVE_GCODE_STATE NAME=CLEANNOZZLE
    G90                                                   ; absolute positioning
    G0 X265 Z10 Y{printer.toolhead.axis_maximum.y} F19500 ; move to right of nozzle brush
    G0 Z3 F19500                                          ; move down to nozzle brush
    {% for iteration in range(i|int) %}
        G0 X215 F{s*60}                                    ; wipe back
        G0 X250 F{s*60}                                   ; wipe forth
    {% endfor %}
    G0 X250 F{s*60}                                       ; wipe back
    G0 Z15 F19500                                         ; raise
    RESTORE_GCODE_STATE NAME=CLEANNOZZLE


[gcode_macro _SWIPENOZZLE]
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=SWIPENOZZLE
    G90                                                   ; absolute positioning
    G0 X265 Z10 Y{printer.toolhead.axis_maximum.y} F19500 ; move to right of nozzle brush
    G0 Z3.5 F19500                                        ; lower
    G0 X215 F2400                                         ; wipe back
    G0 Z15  F19500                                        ; raise
    RESTORE_GCODE_STATE NAME=SWIPENOZZLE  

######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

######################### MISC #########################

[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
        G4 P{dur}
    {% endfor %}

#[gcode_macro M109]
#rename_existing: M99109
#gcode:
#    #Parameters
#    {% set s = params.S|float %}
#    
#    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
#    {% if s != 0 %}
#        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
#    {% endif %}

#[gcode_macro M190]
#rename_existing: M99190
#gcode:
#    #Parameters
#    {% set s = params.S|float %}
#
#    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
#    {% if s != 0 %}
#        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
#    {% endif %}